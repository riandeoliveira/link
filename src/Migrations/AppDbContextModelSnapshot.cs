// <auto-generated />
using System;
using JobScraperBot.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JobScraperBot.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JobScraperBot.Models.IgnoredJob", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("JobId")
                        .HasColumnType("text")
                        .HasColumnName("job_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("UserId", "JobId");

                    b.ToTable("ignored_jobs");
                });

            modelBuilder.Entity("JobScraperBot.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ChatId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("chat_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("IgnoreJobsFound")
                        .HasColumnType("boolean")
                        .HasColumnName("ignore_jobs_found");

                    b.Property<bool>("IsAwaitingForKeywords")
                        .HasColumnType("boolean")
                        .HasColumnName("is_awaiting_for_keywords");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("keywords");

                    b.Property<int>("Limit")
                        .HasColumnType("integer")
                        .HasColumnName("limit");

                    b.Property<int?>("PostedTime")
                        .HasColumnType("integer")
                        .HasColumnName("posted_time");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("WorkType")
                        .HasColumnType("integer")
                        .HasColumnName("work_type");

                    b.HasKey("Id");

                    b.HasIndex("ChatId")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("JobScraperBot.Models.IgnoredJob", b =>
                {
                    b.HasOne("JobScraperBot.Models.User", "User")
                        .WithMany("IgnoredJobs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("JobScraperBot.Models.User", b =>
                {
                    b.Navigation("IgnoredJobs");
                });
#pragma warning restore 612, 618
        }
    }
}
